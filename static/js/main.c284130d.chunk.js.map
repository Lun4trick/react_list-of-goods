{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","ALPHABET","LENGTH","orderedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","cn","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmDE,IAAME,EAAb,4MACEC,MAAc,CACZC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAGIC,KAAKJ,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAIAC,EAGEN,EAHFM,KACAE,EAEER,EAFFQ,SACAC,EACET,EADFS,OAGIC,EAzDH,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAiBzB,OAfIN,GACFO,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,KAAKL,EAASQ,SACZ,OAAOM,EAAME,cAAcD,GAE7B,KAAKf,EAASS,OACZ,OAAOK,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXb,EACKQ,EAAaM,WAKtBC,QAAQC,IAAIf,EAAUD,GAEfQ,GA2BgBS,CAAkBpB,EAAiBM,KAAKJ,OAE7D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaG,IAE7BiB,QAAS,kBACP,EAAKC,SAAS,CAAErB,SAAUG,KAP9B,iCAaA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaI,IAE7BgB,QAAS,kBACP,EAAKC,SAAS,CAAErB,SAAUI,KAP9B,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAAS,kBACP,EAAKC,SAAS,CAAEtB,YAAaA,KAPjC,sBAaEC,IAAaC,GAAQF,IACrB,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBACP,EAAKC,SAAS,CAAErB,SAAUC,EAAMF,YAAY,KAJhD,sBAYJ,6BACE,6BAIIM,EAAaiB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAnFvB,GAAyBC,IAAMC,WClE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c284130d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state:State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const {\n      NONE,\n      ALPHABET,\n      LENGTH,\n    } = SortType;\n\n    const orderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== ALPHABET },\n            )}\n            onClick={() => (\n              this.setState({ sortType: ALPHABET })\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== LENGTH },\n            )}\n            onClick={() => (\n              this.setState({ sortType: LENGTH })\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => (\n              this.setState({ isReversed: !isReversed })\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => (\n                this.setState({ sortType: NONE, isReversed: false })\n              )}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n\n            {\n            // eslint-disable-next-line max-len\n              orderedGoods.map(good => (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}